name: Deploy Telegram Bot

on:
  push:
    branches:
      - Deploy
    paths:
      - 'newsletter-service/tg-bot/**'  # Следит за изменениями в директории tg-bot
      - '.github/workflows/telegram-bot.yml'  # Следит за изменениями в директории workflows

jobs:
  build-and-deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Create Docker network
        # Создаем общую сеть для контейнеров, игнорируем ошибку, если сеть уже существует
        run: |
          docker network create my-network || true

      - name: Build Docker image
        # Сборка Docker-образа для telegram-bot
        run: docker build -t telegram-bot:latest -f ./newsletter-service/tg-bot/Dockerfile ./newsletter-service/tg-bot

      - name: Stop and remove existing container
        # Остановка и удаление предыдущего контейнера telegram-bot
        run: |
          docker stop telegram-bot || true
          docker rm telegram-bot || true

      - name: Run Docker container
        # Запуск контейнера telegram-bot, подключенного к сети my-network
        run: |
          docker run -d \
            --network my-network \
            --name telegram-bot \
            -p 5000:5000 \
            telegram-bot:latest


